<?php

/**
 * @file
 * gdpr_consent.module
 */

use Drupal\Component\Serialization\Json;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Link;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\gdpr_consent\Entity\DataPolicy;
use Drupal\gdpr_consent\Entity\UserConsent;

/**
 * Implements hook_help().
 */
function gdpr_consent_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the gdpr_consent module.
    case 'help.page.gdpr_consent':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module helps site managers inform users about data collection.') . '</p>';

      return $output;

    case 'entity.block.edit_form':
      if ($route_match->getRawParameter('block') != 'gdpr_consent') {
        break;
      }

      $url = Link::createFromRoute(t('Data usage explanation'), 'entity.informblock.collection');

      return '<p>' . t('Go to @url page for setting block title on specific pages.', [
        '@url' => $url->toString(),
      ]) . '</p>';
  }
}

/**
 * Implements hook_theme().
 */
function gdpr_consent_theme($existing, $type, $theme, $path) {
  return [
    'gdpr_consent_data_policy' => [
      'render element' => 'element',
      'template' => 'gdpr-consent-data-policy',
      'variables' => [
        'content' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function gdpr_consent_form_user_register_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['#attached']['library'][] = 'core/drupal.dialog.ajax';

  $link = Link::createFromRoute(t('data policy'), 'gdpr_consent.data_policy', [], [
    'attributes' => [
      'class' => ['use-ajax'],
      'data-dialog-type' => 'modal',
      'data-dialog-options' => Json::encode([
        'title' => t('Data policy'),
        'width' => 700,
        'height' => 700,
      ]),
    ],
  ]);

  $config = \Drupal::config('gdpr_consent.data_policy');

  $form['data_policy'] = [
    '#type' => 'checkbox',
    '#title' => t('I agree with the @url', [
      '@url' => $link->toString(),
    ]),
    '#required' => !empty($config->get('enforce_consent')),
  ];

  $form['actions']['submit']['#submit'][] = '_gdpr_consent_user_register_form_submit';
}

/**
 * Save user consent.
 *
 * @param array $form
 *   An associative array containing the structure of the form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The current state of the form.
 */
function _gdpr_consent_user_register_form_submit(array &$form, FormStateInterface $form_state) {
  if (empty($form_state->getValue('data_policy'))) {
    return;
  }

  $user_consent = UserConsent::create();

  $user_consent->setOwnerId($form_state->getValue('uid'));

  $entity_id = \Drupal::config('gdpr_consent.data_policy')->get('entity_id');

  $user_consent->setRevision(DataPolicy::load($entity_id));

  $user_consent->save();
}
